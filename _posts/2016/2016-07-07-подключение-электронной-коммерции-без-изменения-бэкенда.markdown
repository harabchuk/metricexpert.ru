---
layout: post
title: Подключение электронной коммерции без изменения бэкенда
date: '2016-07-07 23:14'
---

На сайте mambo24.ru подключил электронную коммерцию без модификации PHP кода, используя
библиотеку для локального хранилища.

Когда клиенты заказывают подключение электронной коммерции Google Analytics
их технари обычно медленно выполняют изменения на сайте. Плюс приходится
писать очень подробные ТЗ для этих технарей. Все это растягивается на недели.

Подключение при помощи Google Tag Manager всегда нравилось, потому что можно делать изменения
в скрипте и не просить технарей клиента загрузить обновленный скрипт.

## Как подключается электронная коммерция при помощи JavaScript

Суть метода -- на странице корзины получить названия и стомость товаров из DOM модели. При помощи
jQuery это несложно. Но обычно номер заказа появляется на странице спасибо, а содержимого заказа там уже нет.

Нужно сохранить названия и стоимость товаров между страницами. Куки для этого
не хочется использовать, потому что они могут не вместить большой заказ или неболошой, но
с длинными названиями товаров.

Я сохранаю заказ между страницами в локальном хранилище. Если думаете, что это ненадежно, ошибаетесь.
Библиотека www.jstorage.info учитывает особенности разных браузеров и предоставляет единый интерфейс.

## GTM и jstorage

На странице корзины я формирую массив с товарами: id, название, количество и цена. Сохраняю
заказ в локальном хранилище, на странице "Спасибо за покупку" получааю недостающий номер заказа
и отправляю транзакцию в Google Analytics.

Для этого в GTM я сделал два тэга Init products и Send transaction. Срабатывают тэги
каждый на своей страинце.

## Примеры кода

#### Тэг Init products

Формируется массив готовый к сохранению в data layer но вместо этого сохраняется в
локальном хранилище.

Код получения названий товаров для каждого сайта будет свой, поэтому здесь ничего
интересного. Пробегаем при помощи метода each по всем элементам корзины и собираем
массив с товарами.

```html
<script src="/js/jstorage.js"></script>
<script>
  $(document).ready(function(){
    $('button.submit-order').on('click', function(){
      var $items = $(this).closest('.items');
      var order_data = {transactionProducts:[]};

      $items.find('.cart-item').each(function(e, element){
        var $item = $(element);
        order_data['transactionProducts'].push({
          sku: $item.attr('id'),
          name: $item.find('.desc a').text().trim(),
          price: $item.find('.item-price').text().trim(),
          quantity: $item.find('input.count').val()
        });
      });		

      order_data['transactionTotal'] = $items.find('.items-total-price').text();
      $.jStorage.set('order', order_data);
    });
  });
</script>
```

#### Тэг Send transaction

Используется способ отправки транзакции через data layer

```html
<script src="/js/jstorage.js"></script>
<script>
  var order_data = $.jStorage.get("order");
  if(order_data){
    order_data['transactionId']=$('.cart_info .id span').text();
    order_data['event']='transactionComplete';
    dataLayer.push(order_data);
    $.jStorage.set("order", null);
  }
</script>
```
